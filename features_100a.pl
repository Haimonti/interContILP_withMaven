'$aleph_feature'(1,[],A,pos(B),(has_car(B,C),has_car(B,D),short(C))).
'$aleph_feature'(2,[],A,pos(B),(has_car(B,C),has_car(B,D),load(C,circle,1))).
'$aleph_feature'(3,[],A,pos(B),(has_car(B,C),has_car(B,D),wheels(D,2))).
'$aleph_feature'(4,[],A,pos(B),(has_car(B,C),load(C,utriangle,1),wheels(C,2))).
'$aleph_feature'(5,[],A,pos(B),(has_car(B,C),long(C),jagged(C))).
'$aleph_feature'(6,[],A,pos(B),(has_car(B,C),has_car(B,D),shape(C,rectangle))).
'$aleph_feature'(7,[],A,pos(B),(has_car(B,C),shape(C,rectangle),load(C,rectangle,1))).
'$aleph_feature'(8,[],A,pos(B),(has_car(B,C),load(C,hexagon,1),shape(C,rectangle))).
'$aleph_feature'(9,[],A,pos(B),(has_car(B,C),shape(C,rectangle),wheels(C,3))).
'$aleph_feature'(10,[],A,pos(B),(has_car(B,C),has_car(B,D),long(C))).
'$aleph_feature'(11,[],A,pos(B),(has_car(B,C),has_car(B,D),load(C,rectangle,1))).
'$aleph_feature'(12,[],A,pos(B),(has_car(B,C),short(C),shape(C,rectangle))).
'$aleph_feature'(13,[],A,pos(B),(has_car(B,C),has_car(B,D),load(C,utriangle,2))).
'$aleph_feature'(14,[],A,pos(B),(has_car(B,C),shape(C,rectangle),closed(C))).
'$aleph_feature'(15,[],A,pos(B),(has_car(B,C),has_car(B,D),has_car(B,E))).
'$aleph_feature'(16,[],A,pos(B),(has_car(B,C),load(C,circle,2),wheels(C,2))).
'$aleph_feature'(17,[],A,pos(B),(has_car(B,C),wheels(C,2),short(C))).
'$aleph_feature'(18,[],A,pos(B),(has_car(B,C),open_car(C),has_car(B,D))).
'$aleph_feature'(19,[],A,pos(B),(has_car(B,C),shape(C,u_shaped),open_car(C))).
'$aleph_feature'(20,[],A,pos(B),(has_car(B,C),wheels(C,2),open_car(C))).
'$aleph_feature'(21,[],A,pos(B),(has_car(B,C),has_car(B,D),shape(D,ellipse))).
'$aleph_feature'(22,[],A,pos(B),(has_car(B,C),shape(C,rectangle),open_car(C))).
'$aleph_feature'(23,[],A,pos(B),(has_car(B,C),has_car(B,D),load(C,triangle,1))).
'$aleph_feature'(24,[],A,pos(B),(has_car(B,C),shape(C,u_shaped),wheels(C,2))).
'$aleph_feature'(25,[],A,pos(B),(has_car(B,C),shape(C,rectangle),wheels(C,2))).
'$aleph_feature'(26,[],A,pos(B),(has_car(B,C),shape(C,u_shaped),has_car(B,D))).
'$aleph_feature'(27,[],A,pos(B),(has_car(B,C),closed(C))).
'$aleph_feature'(28,[],A,pos(B),(has_car(B,C),closed(C),has_car(B,D))).
'$aleph_feature'(29,[],A,pos(B),(has_car(B,C),has_car(B,D))).
'$aleph_feature'(30,[],A,pos(B),(has_car(B,C),wheels(C,2))).
'$aleph_feature'(31,[],A,pos(B),(has_car(B,C),has_car(B,D),wheels(C,3))).
'$aleph_feature'(32,[],A,pos(B),(has_car(B,C),wheels(C,2),load(C,circle,1))).
'$aleph_feature'(33,[],A,pos(B),(has_car(B,C),shape(C,rectangle))).
'$aleph_feature'(34,[],A,pos(B),(has_car(B,C),has_car(B,D),load(C,diamond,2))).
'$aleph_feature'(35,[],A,pos(B),(has_car(B,C),load(C,triangle,1))).
'$aleph_feature'(36,[],A,pos(B),(has_car(B,C),shape(C,rectangle),load(C,utriangle,1))).
'$aleph_feature'(37,[],A,pos(B),(has_car(B,C),has_car(B,D),jagged(D))).
'$aleph_feature'(38,[],A,pos(B),(has_car(B,C),load(C,triangle,1),short(C))).
'$aleph_feature'(39,[],A,pos(B),(has_car(B,C),load(C,utriangle,1),wheels(C,3))).
'$aleph_feature_weight'(1,1.0).
'$aleph_feature_weight'(2,1.0).
'$aleph_feature_weight'(3,1.0).
'$aleph_feature_weight'(4,1.0).
'$aleph_feature_weight'(5,1.0).
'$aleph_feature_weight'(6,1.0).
'$aleph_feature_weight'(7,1.0).
'$aleph_feature_weight'(8,1.0).
'$aleph_feature_weight'(9,1.0).
'$aleph_feature_weight'(10,1.0).
'$aleph_feature_weight'(11,1.0).
'$aleph_feature_weight'(12,1.0).
'$aleph_feature_weight'(13,1.0).
'$aleph_feature_weight'(14,1.0).
'$aleph_feature_weight'(15,1.0).
'$aleph_feature_weight'(16,1.0).
'$aleph_feature_weight'(17,1.0).
'$aleph_feature_weight'(18,1.0).
'$aleph_feature_weight'(19,1.0).
'$aleph_feature_weight'(20,1.0).
'$aleph_feature_weight'(21,1.0).
'$aleph_feature_weight'(22,1.0).
'$aleph_feature_weight'(23,1.0).
'$aleph_feature_weight'(24,1.0).
'$aleph_feature_weight'(25,1.0).
'$aleph_feature_weight'(26,1.0).
'$aleph_feature_weight'(27,1.0).
'$aleph_feature_weight'(28,1.0).
'$aleph_feature_weight'(29,1.0).
'$aleph_feature_weight'(30,1.0).
'$aleph_feature_weight'(31,1.0).
'$aleph_feature_weight'(32,1.0).
'$aleph_feature_weight'(33,1.0).
'$aleph_feature_weight'(34,1.0).
'$aleph_feature_weight'(35,1.0).
'$aleph_feature_weight'(36,1.0).
'$aleph_feature_weight'(37,1.0).
'$aleph_feature_weight'(38,1.0).
'$aleph_feature_weight'(39,1.0).
'$aleph_feature_count'(39).
